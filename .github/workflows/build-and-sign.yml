name: Build and Sign

on:
  workflow_dispatch:
  release:
    types: [released]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    environment: code-signing
    timeout-minutes: 15

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.release_tag || github.ref }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm install --include=dev

      - name: Download uv
        run: npm run download linux

      - name: Build application
        run: npm run dist

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: 'Invoke Community Edition.AppImage'
          path: 'dist/Invoke Community Edition.AppImage'
          retention-days: 90

  build-macos:
    runs-on: macos-latest
    environment: code-signing
    timeout-minutes: 15

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.release_tag || github.ref }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm install --include=dev

      - name: Download uv
        run: npm run download mac

      - name: Import macOS certificates
        uses: apple-actions/import-codesign-certs@v3
        with:
          p12-file-base64: ${{ secrets.APPLE_CERT_FILE_B64 }}
          p12-password: ${{ secrets.APPLE_CERT_FILE_PASSWORD }}

      - name: Build and sign application
        run: npm run dist
        env:
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}

      - name: Upload artifact - SIGNED
        uses: actions/upload-artifact@v4
        with:
          name: 'Invoke Community Edition.dmg - SIGNED'
          path: 'dist/Invoke Community Edition.dmg'
          retention-days: 90

  build-windows:
    runs-on: windows-latest
    environment: code-signing
    timeout-minutes: 15

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.release_tag || github.ref }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm install --include=dev

      - name: Download uv
        run: npm run download win

      - name: Set tool paths for signing
        run: |
          echo "C:\Program Files (x86)\Windows Kits\10\App Certification Kit" >> $GITHUB_PATH
          echo "C:\Program Files (x86)\Microsoft SDKs\Windows\v10.0A\bin\NETFX 4.8 Tools" >> $GITHUB_PATH
          echo "C:\Program Files\DigiCert\DigiCert One Signing Manager Tools" >> $GITHUB_PATH
        shell: bash

      - name: Build and sign application
        run: npm run dist
        env:
          SM_HOST: ${{ secrets.SM_HOST }}
          SM_API_KEY: ${{ secrets.SM_API_KEY }}
          SM_CLIENT_CERT_PASSWORD: ${{ secrets.SM_CLIENT_CERT_PASSWORD }}
          SM_CLIENT_CERT_FILE_B64: ${{ secrets.SM_CLIENT_CERT_FILE_B64 }}
          SM_CODE_SIGNING_CERT_SHA1_HASH: ${{ secrets.SM_CODE_SIGNING_CERT_SHA1_HASH }}

      - name: Upload artifact - SIGNED
        uses: actions/upload-artifact@v4
        with:
          name: 'Invoke Community Edition.exe - SIGNED'
          path: 'dist/Invoke Community Edition.exe'
          retention-days: 90
