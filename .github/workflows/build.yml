name: Build Unsigned Artifacts

on:
  push:
    branches:
      - 'main'
  release:
    types: [released]
  pull_request:
    types:
      - 'ready_for_review'
      - 'opened'
      - 'synchronize'
  merge_group:
  workflow_dispatch:

env:
  NODE_VERSION: '22'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: setup nodejs
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Generate lockfile hash without version
        id: lockfile-hash
        run: echo "hash=$(node .github/scripts/generate-lockfile-hash.js)" >> $GITHUB_OUTPUT

      - name: Cache node modules
        id: cache-node-modules
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            ~/.electron
            ~/.electron-gyp
          key: ${{ runner.os }}-node-${{ env.NODE_VERSION }}-modules-${{ steps.lockfile-hash.outputs.hash }}

      - name: Install deps
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci

      - name: Get UV hash
        id: uv-hash
        run: |
          echo "hash=$(node -e "console.log(require('./package.json').uv.linux.sha256)")" >> $GITHUB_OUTPUT

      - name: Cache UV binaries
        id: cache-uv
        uses: actions/cache@v4
        with:
          path: assets/bin
          key: ${{ runner.os }}-uv-${{ steps.uv-hash.outputs.hash }}

      - name: Download uv
        if: steps.cache-uv.outputs.cache-hit != 'true'
        run: npm run download linux

      - name: Build
        run: npm run package

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: 'linux-artifacts-unsigned'
          path: |
            dist/*.AppImage
            dist/*.appimage
            dist/*.blockmap
            dist/*.yml
            dist/*.yaml

  build-macos:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v4

      - name: setup nodejs
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Generate lockfile hash without version
        id: lockfile-hash
        run: echo "hash=$(node .github/scripts/generate-lockfile-hash.js)" >> $GITHUB_OUTPUT

      - name: Cache node modules
        id: cache-node-modules
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            ~/.electron
            ~/.electron-gyp
          key: ${{ runner.os }}-node-${{ env.NODE_VERSION }}-modules-${{ steps.lockfile-hash.outputs.hash }}

      - name: Install deps
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci

      - name: Get UV hash
        id: uv-hash
        run: |
          echo "hash=$(node -e "console.log(require('./package.json').uv.mac.sha256)")" >> $GITHUB_OUTPUT

      - name: Cache UV binaries
        id: cache-uv
        uses: actions/cache@v4
        with:
          path: assets/bin
          key: ${{ runner.os }}-uv-${{ steps.uv-hash.outputs.hash }}

      - name: Download uv
        if: steps.cache-uv.outputs.cache-hit != 'true'
        run: npm run download mac

      - name: Build
        run: npm run package

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: 'macos-artifacts-unsigned'
          path: |
            dist/*.dmg
            dist/*.DMG
            dist/*.zip
            dist/*.ZIP
            dist/*.blockmap
            dist/*.yml
            dist/*.yaml

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: setup nodejs
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Generate lockfile hash without version
        id: lockfile-hash
        shell: bash
        run: echo "hash=$(node .github/scripts/generate-lockfile-hash.js)" >> $GITHUB_OUTPUT

      - name: Cache node modules
        id: cache-node-modules
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            ~/.electron
            ~/.electron-gyp
          key: ${{ runner.os }}-node-${{ env.NODE_VERSION }}-modules-${{ steps.lockfile-hash.outputs.hash }}

      - name: Install deps
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci

      - name: Get UV hash
        id: uv-hash
        shell: bash
        run: |
          echo "hash=$(node -e "console.log(require('./package.json').uv.win.sha256)")" >> $GITHUB_OUTPUT

      - name: Cache UV binaries
        id: cache-uv
        uses: actions/cache@v4
        with:
          path: assets/bin
          key: ${{ runner.os }}-uv-${{ steps.uv-hash.outputs.hash }}

      - name: Download uv
        if: steps.cache-uv.outputs.cache-hit != 'true'
        run: npm run download win

      - name: Build
        run: npm run package

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: 'windows-artifacts-unsigned'
          path: |
            dist/*.exe
            dist/*.EXE
            dist/*.blockmap
            dist/*.yml
            dist/*.yaml
